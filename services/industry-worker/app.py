import asynciofrom sqlalchemy import create_engineimport pandas as pdimport loggingimport defi.worker as workerfrom settings.env import envengine = create_engine(f"postgresql://{env.username}:{env.password}@localhost:5432/{env.database}")async def update_TVL_scheduler() -> None:    """    Used for scheduling updates of TVL in postgres    Time for update is located in .env file    Returns    -------    None.    """    while True:        df = pd.read_sql_query('select * from "tvl_data"',con=engine)        new_data = worker.update_tvl_data(df)        new_data.to_sql('tvl_data', engine, if_exists='replace')        await asyncio.sleep(env.tvl_delay),        async def main():    """    Main asyncio function. Initializes TVL and sets it into postgres,    then updating TVL.     Returns    -------    None.    """    if "True" in env.initialize:        df = worker.get_TVL_data(start_date = '2021-08-31', end_date = '2023-02-28')        df.to_sql('TVL_data', engine, if_exists='replace')        while True:        await asyncio.gather(            update_TVL_scheduler()        )if __name__ == "__main__":    asyncio.run(main())